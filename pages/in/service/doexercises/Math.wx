<template>
  <view>
    <ui-popup show="{{ show3 }}" height="100%">
      <view class="popup1">
        <button bindtap="handleShow3" plain type="primary">开始做作业</button>
        <view class="text-in">
          <text>今天作业一共有：{{num}} 题</text>
        </view>
        <view class="text-in" wx:if="{{q0_num >0}}">
          <text>单选题还剩下：{{q0_num}} 题</text>
        </view>
        <view class="text-in" wx:if="{{q1_num >0}}">
          <text>语音题还剩下：{{q1_num}} 题</text>
        </view>
        <view class="text-in" wx:if="{{q2_num >0}}">
          <text>填空题还剩下：{{q2_num}} 题</text>
        </view>
        <view class="text-in" wx:if="{{q3_num >0}}">
          <text>应用题还剩下：{{q3_num}} 题</text>
        </view>
        <view class="text-in">
          <text>还需要做：{{tempNum}} 题</text>
        </view>
      </view>
    </ui-popup>
    <ui-popup show="{{ isWrong }}" height="{{500}}" background="transparent">
        <view class="popup5">
            <ui-row height="40" border-bottom>
                <ui-col vertical-align="middle" space-left="20">答错了哦~不要灰心，我们来看看为什么</ui-col>
                <ui-col width="40" vertical-align="middle" align="center" bindtap="handleShow5">
                    <ui-icon type="x" size="18" color="#FC8950"></ui-icon>
                </ui-col>
            </ui-row>
            <view class="title">{{question_remark}}</view>
            <ui-row height="50">
                <ui-col space-left="10" space-right="20" vertical-align="middle">
                    <button type="primary" bindtap="handleShow5">下一题</button>
                </ui-col>
            </ui-row>
        </view>
    </ui-popup>
    <view style="{{showq0}}">
      <view class="title"><text>{{title}}</text></view>
      <view class="Qtitle">题目：<text>{{question_title}}</text></view>
      <view wx:if="{{Qimg}}" style="height:280px;padding-bottom:40px;"><image src="{{Qimg}}" mode="aspectFit" lazy-load></view>
      <ui-check-list max="1" options="{{ select }}" value="{{ selectValue }}" type="circle" bindchange="change"></ui-check-list>
      <view class="tra">
        <view class="button-press" bindtap="sure">
          <span class="text-in-button">确定</span>
          <image class="button-background" src="../../../../imgs/button_en.png">
        </view>
      </view>
    </view>
    <view style="{{showq1}}">
      <view class="title"><text>{{title}}</text></view>
      <view class="Qtitle">题目：<text>{{question_title}}</text></view>
      <view wx:if="{{Qimg}}" style="height:280px;padding-bottom:40px;"><image src="{{Qimg}}" mode="aspectFit" lazy-load></view>
      <view class="tra">

        <!-- <view wx:for="{{buttons}}" wx:for-item="button" wx:key="{{button.lang}}" class="button-item"> -->
          <view catchtouchstart="streamRecord" catchtouchend="endStreamRecord" class="button-press">
            <span class="text-in-button {{ buttonsAn? 'text-press': '' }}">长按说话</span>
            <image class="button-background" src="../../../../imgs/button_zh.png">
          </view>
        <!-- </view> -->

      </view>
      <view class="tra">
        <view class="button-press" bindtap="play" style="{{showPlay}}">
          <span class="text-in-button">听录音</span>
          <image class="button-background" src="../../../../imgs/button_en.png">
        </view>
      </view>
    </view>
    <view style="{{showq2}}">
      <view class="title"><text>{{title}}</text></view>
      <view class="Qtitle">题目：<text>{{question_title}}</text></view>
      <view wx:if="{{Qimg}}" style="height:280px;padding-bottom:40px;"><image src="{{Qimg}}" mode="aspectFit" lazy-load></view>
      <view class="input">答案：<input class="input_an" bindinput="input_an" placeholder="请输入答案"></view>
      <view class="tra">
        <view class="button-press" bindtap="sure">
          <span class="text-in-button">确定</span>
          <image class="button-background" src="../../../../imgs/button_en.png">
        </view>
      </view> 
    </view>
    <view style="{{showq3}}">
      <view class="title"><text>{{title}}</text></view>
      <!-- <block wx:for="{{QList}}" wx:if="{{index==0 || tempSelect3[index==0 ? '0': index-1]==false || tempSelect3[index==0 ? '0': index-1]==true}}"> -->
      <block wx:for="{{QList}}" wx:if="{{index==0 || kyb[index-1] != null}}">
        <view class="Qtitle">题目：<text>{{item.question_title}}</text></view>
        <view wx:if="{{Qimg}}" style="height:280px;padding-bottom:40px;"><image src="{{Qimg}}" mode="aspectFit" lazy-load></view>
        <ui-check-list max="1" disabled="{{kyb[index] != null?true:false}}" options="{{ select3[index] }}" value="" type="circle" bindchange="change3" id="{{index}}"></ui-check-list>
        <!-- <view class="tra" wx:if="{{kyb[index] != null?true:false}}"> -->
          <view>
        <view class="tra" wx:if="{{kyb[index] != null?false:true}}">
          <view class="button-press" bindtap="sure3" id="{{index}}">
            <span class="text-in-button">确定</span>
            <image class="button-background" src="../../../../imgs/button_en.png">
          </view>
        </view>
        <view class="tra" wx:else>
          <view class="button-press">
            <span class="text-in-button">已选定</span>
            <image class="button-background" src="../../../../imgs/button_zh.png">
          </view>
        </view>
          </view>
        <!-- 分割线 -->
        <image wx:if="{{QList.length-1 != index}}" class="line" src="../../../../imgs/service/line.png" mode="aspectFill">
      </block>
    </view>
  </view>
</template>

<script>
const plugin = requirePlugin("WechatSI");
const manager = plugin.getRecordRecognitionManager();
const innerAudioContext = wx.createInnerAudioContext();
export default {
  config: {
    navigationBarTitleText: ''
  },
  data: {
    subject_id:'',
    title: '单选题',
    class_id: '',
    show3: 'show',
    isWrong: false,
    showq0: 'display:none',
    showq1: 'display:none',
    showq2: 'display:none',
    showq3: 'display:none',
    showPlay: 'display:none',
    question_title:'',
    select:[],
    selectValue:[],
    buttonsAn:false,
    tempSelect3:[],
    kyb:[]
  },
  onLoad: function(e){
    var that = this;
    that.setData({
      class_id:e.class_id,
      subject_id:e.subject_id
    })
    this.initRecord();
  },
  input_an(e){
    var obj = {};
    obj = e.detail.value;
    let selectValue = [];
    selectValue.push(obj);
    this.setData({
      selectValue,
    })
  },
  play: function(){
    //开始播放
    innerAudioContext.play();
    //开始播放触发
    innerAudioContext.onPlay(() => {
      wx.showLoading({
        title: '播放录音中',
        mask: true
      })
    })
    //播放出错触发
    innerAudioContext.onError((res) => {
    })
    //播放完成触发
    innerAudioContext.onEnded(() => {
      var that = this;
      wx.hideLoading();
      wx.showModal({
        title:'提交答案',
        content:'请注意发音准确哦~',
        success:function(res){
          if(res.confirm){
            that.sentAnswer();
          }
        }
      })
    })
  },
  /**
     * 按下按钮开始录音
     */
    streamRecord(e) {
      wx.showLoading({
        title: '接收语音中',
      });
      this.setData({
        showPlay: 'display:none',
        buttonsAn:true,
        selectValue:[]
      })
      if(this.data.subject_id == '79bed2b0e57c4f7f8e71b9817f03e3b9'){
        manager.start({
          lang: 'en_US'
        })
      }else{
        manager.start({
          lang: 'zh_CN'
        })
      }
    },

    /**
     * 松开按钮结束录音
     */
    endStreamRecord(e) {
      wx.hideLoading();
      this.setData({
        buttonsAn:false
      })
      wx.showLoading({
        title: '加载语音中',
        mask: true
      })
      manager.stop();
    },
    /**
   * 初始化语音识别回调
   * 绑定语音播放开始事件
   */
  initRecord: function() {
    // 识别结束事件
    manager.onStop = (res) => {
      if(res.result!=""){
        wx.hideLoading();
        innerAudioContext.src = res.tempFilePath;
        var obj = {};
        obj = res.result;
        let selectValue = [];
        selectValue.push(obj);
        this.setData({
          selectValue,
          showPlay:''
        })
      }else{
        wx.showToast({
          title:'没听清楚你说什么呢~',
          icon:'none',
          duration:3000,
          image:'/imgs/service/noListen.gif',
        })
      }
    }
    // 识别错误事件
    manager.onError = (res) => {
      wx.hideLoading();
      wx.showToast({
        title:"识别错误，请重试！",
        icon: 'none',
      })
    }
  },

  sure(){
    var that = this;
    if(that.data.selectValue.length == 0){
      wx.showToast({
        title:'不能交白卷哦！~',
        icon: 'none',
        duration:3000
      });
      return;
    }
    that.sentAnswer();
  },
  sure3(e){
    var that = this;
    if(that.data.tempSelect3[e.currentTarget.id] == null){
      wx.showToast({
        title:'不能交白卷哦！~',
        icon: 'none',
        duration:3000
      });
      return;
    }
    var wori = "kyb["+e.currentTarget.id+"]";
    this.setData({
      [wori]:1
    })
    if(that.data.tempSelect3[e.currentTarget.id]){
      wx.showToast({
        title:'答对了哦！真棒~\r\n往下拉吧~',
        icon: 'none',
        duration:2000
      })
    }else{
      var wrongMessage = that.data.QList[e.currentTarget.id].question_remark;
      that.setData({
        question_remark : wrongMessage,
        isWrong : 'show',
      })
    }
    if(e.currentTarget.id == that.data.select3.length - 1){
      var tempQID;
      var tempRorW = 0;
      for(var i=0;i<that.data.tempSelect3.length;i++){
        if(!that.data.tempSelect3[i]){
          tempQID = that.data.QList[0].question_id;
          tempRorW = 1;
          break;
        }
      }
      wx.request({
        url:getApp().globalData.headurl + 'question/xigua',
        header:{
          'content-type': 'application/json'
        },
        data:{
          user_id : getApp().globalData.openid,
          q : that.data.tempQ,
          homework_id : that.data.homework_id,
          question_id : tempQID,
          RorW : tempRorW
        },
        success:function(res){
          that.setData({
            tempSelect3:[],
            kyb:[]
          })
          setTimeout(function() {
            that.onShow();
          }, 500);
        }
      })
    }
  },
  sentAnswer(){
    var that = this;
    wx.request({
      url:getApp().globalData.headurl + 'question/answer',
      header:{
        'content-type': 'application/json'
      },
      data:{
        user_id : getApp().globalData.openid,
        q : that.data.tempQ,
        answer: that.data.selectValue[0],
        QType:that.data.QType,
        homework_id:that.data.homework_id
      },
      success: function(res){
        that.setData({
            selectValue:[]
        })
        if(res.data.RorW == 0){
          that.setData({
            question_remark : res.data.question_remark,
            isWrong : 'show',
          })
        }else{
          wx.showToast({
            title:'答对了哦！真棒~',
            icon: 'none',
            duration:2000
          })
        }
        that.onShow();
      }
    })
  },
  change(e){
    this.setData({
      selectValue:e.detail.value
    })
  },
  change3(e){
    var that = this;
    var tempIndex;
    for(var i = 0;i<4;i++){
      if(that.data.select3[e.target.id][i].key == e.detail.value){
        tempIndex = i;
      }
    }
    var temp = this.data.select3[e.target.id][tempIndex];
    var wori = "tempSelect3["+e.target.id+"]";
    var dcqs = temp.RorF
    this.setData({
      [wori]:dcqs
    })
  },
  openPopup5 (e) {
    let show = e.currentTarget.dataset.show
    this.setData({
      isWrong: show
    })
  },
  handleShow5(){
    this.setData({
      isWrong:false
    })
  },
  handleShow3(){
    var that = this;
    that.setData({
      show3:false
    });
    that.binggo();
  },
  binggo(){
    var that = this;
    if(that.data.q0_num>0){
      that.setData({
        showq0:'',
        showq1:'display:none',
        showq2:'display:none',
        showq3:'display:none',
        title:'单选题'
      })
      return;
    }
    if(that.data.q1_num>0){
      that.setData({
        showq0:'display:none',
        showq1:'',
        showq2:'display:none',
        showq3:'display:none',
        title:'语音题'
      })
      return;
    }
    if(that.data.q2_num>0){
      that.setData({
        showq0:'display:none',
        showq1:'display:none',
        showq2:'',
        showq3:'display:none',
        title:'填空题'
      })
      return;
    }
    if(that.data.q3_num>0){
      that.setData({
        showq0:'display:none',
        showq1:'display:none',
        showq2:'display:none',
        showq3:'',
        title:'应用题'
      })
      return;
    }
  },
  onShow: function(res){
    var that = this;
    wx.request({
      url:getApp().globalData.headurl + 'homework/selectNum',
      header:{
        'content-type': 'application/json'
      },
      data:{
        class_id : that.data.class_id,
        subject_id : that.data.subject_id,
        user_id : getApp().globalData.openid
      },
      success: function(res){
        var tempres = [res.data.q0_num,res.data.q1_num,res.data.q2_num,res.data.q3_num];
        var tempQ = null;
        for(var i = 0; i < tempres.length; i++){
          if(tempres[i] > 0){
            tempQ = "q"+i;
            break;
          }
        }
        var tempNum = parseInt(res.data.q0_num)+parseInt(res.data.q1_num)+parseInt(res.data.q2_num)+parseInt(res.data.q3_num);
        that.setData({
          q0_num : res.data.q0_num,
          q1_num : res.data.q1_num,
          q2_num : res.data.q2_num,
          q3_num : res.data.q3_num,
          tempNum : tempNum,
          num : res.data.num,
          tempQ : tempQ,
          homework_id : res.data.homework_id
        })
        if(tempNum<=0){
          wx.showModal({
            title:'哇塞',
            content:'已经没有作业了哦~',
            showCancel:false,
            success(res){
              wx.navigateBack({
                delta: 1
              })
            }
          })
        }
        that.selectOne(tempQ);
        that.binggo();
      }
    });
  },
  selectOne: function(tempQ){
    var that = this;
    wx.request({
      url:getApp().globalData.headurl + 'homework/selectOne',
      header:{
        'content-type': 'application/json'
      },
      data:{
        user_id : getApp().globalData.openid,
        q : tempQ,
      },
      success: function(data){
        console.log(data);
        //单选题
        if(data.data.QType == "0"){
          that.setData({
            question_title : data.data.question_title,
            select : data.data.select,
            Qimg : data.data.question_image,
            QType : data.data.QType
          })
          return;
        }
        //语音题
        if(data.data.QType == "1"){
          that.setData({
            question_title : data.data.question_title,
            Qimg : data.data.question_image,
            QType : data.data.QType
          })
          return;
        }
        //填空题
        if(data.data.QType == "2"){
          that.setData({
            question_title : data.data.question_title,
            Qimg : data.data.question_image,
            QType : data.data.QType
          })
          return;
        }//应用题
        if(data.data.QType == "3"){
          that.setData({
            question_title : data.data.question_title,
            Qimg : data.data.question_image,
            QType : data.data.QType,
            QList : data.data.Qlist,
            select3 : data.data.select3
          })
          return;
        }
      }
    })
  }
}
</script>

<style lang="less">
.line{
  height:100rpx;
  padding-top:20rpx;
  padding-bottom:50rpx;
}
.input{
  display: flex;
  flex-grow: 1;
  padding-left:70rpx;
  font-size:38rpx;
}
.input_an{
  padding-top: 8rpx;
  padding-left: 30rpx;
  width: 525rpx;
}
.title{
  padding-top: 36.2rpx;
  display: flex;
  justify-content: center;
  align-items: center;
}
.text-in{
  padding-top: 36.2rpx;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 65rpx;
}
.Qtitle{
  font-size: 45.25rpx;
  min-height: 144.8rpx;
}
.button-style-demo1 {
  background-color: #C01920;
  border-radius: 36.2rpx;
  border-color: #C01920;
  box-shadow: 5.43rpx 5.43rpx 14.84rpx #E57A7E;
  color: #fff;
}
.popup5{
  width: 95%;
  background-color:#fff;
  height:452.5rpx;
  margin:0 auto;
  border-radius:9.05rpx;
  overflow:hidden;
  .title{
    line-height: 54.3rpx;
    padding: 18.1rpx 36.2rpx;
  }
}


//翻译
.tra{
  height: 181rpx;
  display: flex;
  justify-content: center;
  align-items: center;
}
.button-item {
  width: 240rpx;
}
.button-press {
  position: relative;
  display: flex;
  height: 100rpx;
  width: 296.84rpx;
  justify-content: center;
  -webkit-justify-content: center;
  align-items: center;
}
.button-background {
  position: absolute;
  height: 100rpx;
  width: 100%;
  border-radius: 100rpx;
  left: 0;
  z-index: 1;
}

.text-in-button {
  font-weight: bold;
  font-size: 34rpx;
  color: #FFFFFF;
  z-index: 2;
}

.text-in-button.text-press {
  opacity: 0.6;
}
</style>
